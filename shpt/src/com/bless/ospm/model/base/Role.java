package com.bless.ospm.model.base;

// Generated 2013-5-17 11:14:35 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Role generated by hbm2java
 */
@Entity
@Table(name = "role", catalog = "shpt")
public class Role implements java.io.Serializable {

	private Long id;
	private String name;
	private String description;
	private Byte status;
	private Set<UserRoleRef> userRoleRefs = new HashSet<UserRoleRef>(0);
	private Set<RoleResourceRef> roleResourceRefs = new HashSet<RoleResourceRef>(
			0);

	public Role() {
	}

	public Role(Long id) {
		super();
		this.id = id;
	}

	public Role(String name, String description, Byte status,
			Set<UserRoleRef> userRoleRefs, Set<RoleResourceRef> roleResourceRefs) {
		this.name = name;
		this.description = description;
		this.status = status;
		this.userRoleRefs = userRoleRefs;
		this.roleResourceRefs = roleResourceRefs;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "name", length = 40)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 40)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<UserRoleRef> getUserRoleRefs() {
		return this.userRoleRefs;
	}

	public void setUserRoleRefs(Set<UserRoleRef> userRoleRefs) {
		this.userRoleRefs = userRoleRefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "role")
	public Set<RoleResourceRef> getRoleResourceRefs() {
		return this.roleResourceRefs;
	}

	public void setRoleResourceRefs(Set<RoleResourceRef> roleResourceRefs) {
		this.roleResourceRefs = roleResourceRefs;
	}

}
